#Initially, I retrieved Spotify data from Kaggle. 
#Following that, I formulated a table for data insertion and utilized SQL for analytical purposes.

#Formulating a table:

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );


# Then, I inserted the Spotify Data .csv into the table

# Next, I explored the data using the following sql:

#1 What are the top 10 tracks with the highest popularity rating?

SELECT track_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC
LIMIT 10;

#2 Which artist has the highest average danceability score across all their tracks?

SELECT artist_name, sum(danceability),count(artist_name),sum(danceability)/count(artist_name) as avgdanceability
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY avgdanceability desc
LIMIT 1;

#3 What is the average duration of tracks in the database, grouped by time signature?

SELECT time_signature,sum(duration_ms),count(time_signature),avg(duration_ms)
FROM BIT_DB.Spotifydata
GROUP BY time_signature;

#4 Which songs have the highest and lowest valence score?

SELECT DISTINCT track_name,MAX(valence) max_min
FROM BIT_DB.Spotifydata
union
SELECT DISTINCT track_name,MIN(valence) 
FROM BIT_DB.Spotifydata;
